version: "3"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    container_name: ${COMPOSE_PROJECT_NAME}-traefik
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  redaxo:
    build: ./docker/redaxo # build folder for redaxo image
    container_name: ${COMPOSE_PROJECT_NAME}-redaxo
    ports:
      - 20080:80 # web server will use port 20080 for http
      - 20443:443 # web server will use port 20443 for https
    volumes:
      - ./html:/var/www/html:cached # webroot `/var/www/html` will be synced with your local folder `./html`
    depends_on:
      - db
    environment:
      REDAXO_SERVER: ${REDAXO_SERVER}
      REDAXO_SERVERNAME: ${REDAXO_SERVERNAME}
      REDAXO_ERROR_EMAIL: ${REDAXO_ERROR_EMAIL}
      REDAXO_LANG: ${REDAXO_LANG}
      REDAXO_TIMEZONE: ${REDAXO_TIMEZONE}
      REDAXO_DB_HOST: ${COMPOSE_PROJECT_NAME}-db
      REDAXO_DB_NAME: ${DB_NAME}
      REDAXO_DB_LOGIN: ${DB_LOGIN}
      REDAXO_DB_PASSWORD: ${DB_PASSWORD}
      REDAXO_DB_CHARSET: ${DB_CHARSET}
      REDAXO_ADMIN_USER: ${ADMIN_USER}
      REDAXO_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    labels:
      - "traefik.http.routers.redaxo.rule=Host(`${TRAEFIK_DOMAIN}`)"
    networks:
      - web

  db:
    image: mysql:8
    container_name: ${COMPOSE_PROJECT_NAME}-db
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./db:/var/lib/mysql:cached # database in `/var/lib/mysql` will be synced with your local folder `./db`
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_LOGIN}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    networks:
      - web

  scss:
    build: ./docker/bimmelbam
    volumes:
      - ./bimmelbam:/var/www/html:cached
      - ./html:/var/www/app:cached
    ports:
      - 10010:8080
    networks:
      - web

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    ports:
      - 28080:80
    depends_on:
      - db
    environment:
      - PMA_HOST=${COMPOSE_PROJECT_NAME}-db
      - PMA_USER=${DB_LOGIN}
      - PMA_PASSWORD=${DB_PASSWORD}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
    networks:
      - web

  mailhog:
    image: mailhog/mailhog
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    ports:
      - 1025:1025 # mailhog will use port 1025 (for smtp)
      - 28025:8025 # mailhog will use port 28025 (for its web interface)
    networks:
      - web

  blackfire:
    image: blackfire/blackfire:2
    container_name: ${COMPOSE_PROJECT_NAME}-blackfire
    environment:
      # replace with credentials found on https://blackfire.io/my/settings/credentials
      BLACKFIRE_CLIENT_ID:
      BLACKFIRE_CLIENT_TOKEN:
      BLACKFIRE_SERVER_ID:
      BLACKFIRE_SERVER_TOKEN:

networks:
  web:
    external:
      name: ${COMPOSE_PROJECT_NAME}_default
